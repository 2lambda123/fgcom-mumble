/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hbeni.fgcom_mumble.gui;

import hbeni.fgcom_mumble.State;
import hbeni.fgcom_mumble.UDPserver;
import java.awt.Color;
import java.net.URL;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author beni
 */
public class RDFWindow extends javax.swing.JFrame {

    protected UDPserver udpServer;
    
    protected State state;
    JPanel radioContainer; // Container holds the radio instances
    
    /**
     * Creates new form RDFWindow
     */
    public RDFWindow(State st) {
        state = st;
        
        initComponents();
        
        URL iconURL = getClass().getResource("/fgcom_logo.png");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        
        // Adjust the scroll panel
        radioContainer = new JPanel();
        radioContainer.setLayout(new BoxLayout(radioContainer, BoxLayout.PAGE_AXIS));
        
        // Update basic state
        updateFromState();
        
        // add radios that are already existing in the state (ie defaults)
        state.getRadios().forEach(r -> {
            radioContainer.add(new RDFInstance(r));
        });
        
        jScrollPanel_RadioPanel.setViewportView(radioContainer);
        jScrollPanel_RadioPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPanel_RadioPanel = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_ConnectionStatus = new javax.swing.JLabel();
        jLabel_Statusbar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel_Port = new javax.swing.JLabel();

        setTitle("RDF");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("UDP server state"));

        jLabel1.setText("Connection");

        jLabel_ConnectionStatus.setBackground(new java.awt.Color(255, 255, 0));
        jLabel_ConnectionStatus.setToolTipText("Green=UDP server running OK; Red=UDP server disabled or error occured");
        jLabel_ConnectionStatus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel_ConnectionStatus.setMaximumSize(new java.awt.Dimension(9, 22));
        jLabel_ConnectionStatus.setMinimumSize(new java.awt.Dimension(9, 22));
        jLabel_ConnectionStatus.setOpaque(true);
        jLabel_ConnectionStatus.setPreferredSize(new java.awt.Dimension(9, 22));

        jLabel_Statusbar.setEditable(false);
        jLabel_Statusbar.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jLabel_Statusbar.setText("initializing...");
        jLabel_Statusbar.setToolTipText("Shows the UDP server state");

        jLabel2.setText("Port");

        jLabel_Port.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_ConnectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel_Statusbar, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_Port, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel_ConnectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Statusbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel_Port))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel_Statusbar.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPanel_RadioPanel)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPanel_RadioPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // Called when showing the RDF window
        
        // start the UDP server
        udpServer = new UDPserver(this);
        udpServer.start();
    }//GEN-LAST:event_formComponentShown

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // Called when hiding the  RDF window
        
        // stop the UDP server
        udpServer.shutdown();
        udpServer = null;
    }//GEN-LAST:event_formComponentHidden


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_ConnectionStatus;
    private javax.swing.JLabel jLabel_Port;
    private javax.swing.JTextField jLabel_Statusbar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPanel_RadioPanel;
    // End of variables declaration//GEN-END:variables

    /*
    * Update panel from radio state
    */
    public void updateFromState() {

        // TODO: maybe we need to check the registered vs the displayed radios:
        //       add missing ones to the pane, remove obsolete ones
        for (int i=0; i < radioContainer.getComponentCount(); i++) {
            RDFInstance comp = (RDFInstance)radioContainer.getComponent(i);
            comp.updateFromState();
        }
    }
    
    
    /**
     * Update the connection state
     */
    public void setConnectionState(boolean state) {
        if (state) {
            this.jLabel_ConnectionStatus.setBackground(Color.green);
        } else {
            this.jLabel_ConnectionStatus.setBackground(Color.red);
        }
    }
    
    /**
     * Update the message status box
     */
    public void setStatusText(String txt) {
        this.jLabel_Statusbar.setText(txt);
    }
    
    /**
     * Update the message status box
     */
    public void setPortText(String txt) {
        this.jLabel_Port.setText(txt);
    }
}
