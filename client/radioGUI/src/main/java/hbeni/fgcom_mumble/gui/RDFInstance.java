/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package hbeni.fgcom_mumble.gui;

import hbeni.fgcom_mumble.Radio;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.security.InvalidParameterException;

/**
 *
 * @author beni
 */
public class RDFInstance extends javax.swing.JInternalFrame {

    protected Radio radioBackend;
    
    /**
     * Creates new form RDFInstance
     */
    public RDFInstance(Radio r) {
        initComponents();
        radioBackend = r;
        initComponents();
        updateFromState();
        
        this.setVisible(true);
    }


    /**
     * Code for the panels with the lines
     * 
     * This is a panel that can draw a line in it.
     * Colors are defined in the properties of the JPane.
     */
    protected class LineDrawingPanel extends javax.swing.JPanel {
        int originOffset_x = 0;
        int originOffset_y = 0;
        String selector = "";
        
        public LineDrawingPanel(String selector) {
            switch(selector) {
                case "DIR":
                case "VRT":
                    this.selector = selector;
                    break;
                default:
                    throw new InvalidParameterException("selector invalid");
            }
        }
        
        protected float getAngle() {
            switch(selector) {
                case "DIR":
                    return radioBackend.getRDF_DIR();
                case "VRT":
                    // We must adjust the input value, because the draw function
                    // will assume 0=up/north)
                    // Values: -90(=down) -> 0(=straight) -> +90(=up)
                    return radioBackend.getRDF_VRT()*-1 + 90;
                default:
                    return 0;
            }
        }
        
        @Override
        protected void paintComponent(Graphics gr) {
            // Use panel.repaint(); to update this panel
            super.paintComponent(gr);
            int[] origin = getOrigin();
            
            // Paint a nice horizontal line into the VRT gauge
            if (selector.equals("VRT")) {
                Color originalColor = gr.getColor();
                gr.setColor(Color.DARK_GRAY);
                gr.drawLine(0, origin[1], getPreferredSize().width, origin[1]);
                gr.setColor(originalColor);
            }
            
            // Paint the line pointing at the right location
            if (radioBackend.getRDF() && radioBackend.getRDFParsed()) {
                Graphics2D g = (Graphics2D)gr;
                
                // basic line pointing from center upwards
                Line2D line = new Line2D.Double(origin[0], origin[1], origin[0], 0);
                
                // rotate the line
                AffineTransform at = 
                    AffineTransform.getRotateInstance(
                        Math.toRadians(getAngle()), line.getX1(), line.getY1());
                
                g.draw(at.createTransformedShape(line));
   
            }
        }
        
        /**
         * Calculate origin (center) of this panel
         * @return int array: [x,y]
         */
        protected int[] getOrigin() {
            int x = getPreferredSize().width;
            int y = getPreferredSize().height;
            int[] o = {x/2+originOffset_x, y/2+originOffset_y};
            return o; 
        }
        
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox_EnableRDF = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_ID_RX = new javax.swing.JTextField();
        jTextField_CS_TX = new javax.swing.JTextField();
        jTextField_DIR = new javax.swing.JTextField();
        jTextField_VRT = new javax.swing.JTextField();
        jTextField_FRQ = new javax.swing.JTextField();
        jTextField_QLY = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_RadioFRQ = new javax.swing.JTextField();
        jPanel_Compass = new LineDrawingPanel("DIR");
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel_Clino = new LineDrawingPanel("VRT");
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jCheckBox_EnableRDF.setText("RDF enabled");
        jCheckBox_EnableRDF.setToolTipText("<html>Enables Radio direction finding for this Radio.<br> RadioGUI will send this to the plugin, and the plugin will answer with RDF<br> packages (containing the informatin which is dispayed here) to RadioGUI.</html>");
        jCheckBox_EnableRDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_EnableRDFActionPerformed(evt);
            }
        });

        jLabel1.setText("CS_TX");
        jLabel1.setToolTipText("Callsign of the sender");

        jLabel2.setText("FRQ");
        jLabel2.setToolTipText("Frequency of the source signal");

        jLabel3.setText("DIR");
        jLabel3.setToolTipText("<html>Direction to the signal.<br>0=north, 90=east, etc</html>");

        jLabel4.setText("VRT");
        jLabel4.setToolTipText("<html>Vertical direction to the signal.<br>0=straight, negative is downwards and positive upwards</html>");

        jLabel5.setText("QLY");
        jLabel5.setToolTipText("<html>Quality of the signal.<br>1.0=100%</html>");

        jLabel6.setText("ID_RX");
        jLabel6.setToolTipText("Internal Radio-ID from the RDF packet to select the matching radio");

        jTextField_ID_RX.setEditable(false);
        jTextField_ID_RX.setText("-");
        jTextField_ID_RX.setToolTipText("Internal Radio-ID from the RDF packet to select the matching radio");

        jTextField_CS_TX.setEditable(false);
        jTextField_CS_TX.setText("-");
        jTextField_CS_TX.setToolTipText("Callsign of the sender");

        jTextField_DIR.setEditable(false);
        jTextField_DIR.setText("-1");
        jTextField_DIR.setToolTipText("<html>Direction to the signal.<br>0=north, 90=east, etc</html>");

        jTextField_VRT.setEditable(false);
        jTextField_VRT.setText("-1");
        jTextField_VRT.setToolTipText("<html>Vertical direction to the signal.<br>0=straight, negative is downwards and positive upwards</html>");

        jTextField_FRQ.setEditable(false);
        jTextField_FRQ.setText("-1");
        jTextField_FRQ.setToolTipText("Frequency of the source signal");

        jTextField_QLY.setEditable(false);
        jTextField_QLY.setText("-1");
        jTextField_QLY.setToolTipText("<html>Quality of the signal.<br>1.0=100%</html>");

        jLabel7.setText("Radio FRQ");
        jLabel7.setToolTipText("Shows the tuned frequency of the Radio");

        jTextField_RadioFRQ.setEditable(false);
        jTextField_RadioFRQ.setText("-");
        jTextField_RadioFRQ.setToolTipText("Shows the tuned frequency of the Radio");

        jPanel_Compass.setBackground(new java.awt.Color(0, 0, 0));
        jPanel_Compass.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153), new java.awt.Color(51, 51, 51), new java.awt.Color(102, 102, 102)));
        jPanel_Compass.setForeground(new java.awt.Color(204, 204, 0));
        jPanel_Compass.setToolTipText("Direction to the signal");
        jPanel_Compass.setPreferredSize(new java.awt.Dimension(80, 80));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DIR");

        jLabel10.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("N");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel11.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("W");

        jLabel12.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("E");

        jLabel13.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("S");

        jLabel17.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("E");
        jLabel17.setName(""); // NOI18N
        jLabel17.setPreferredSize(new java.awt.Dimension(12, 12));

        javax.swing.GroupLayout jPanel_CompassLayout = new javax.swing.GroupLayout(jPanel_Compass);
        jPanel_Compass.setLayout(jPanel_CompassLayout);
        jPanel_CompassLayout.setHorizontalGroup(
            jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CompassLayout.createSequentialGroup()
                .addGroup(jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_CompassLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel_CompassLayout.createSequentialGroup()
                        .addGroup(jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_CompassLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel_CompassLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );
        jPanel_CompassLayout.setVerticalGroup(
            jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CompassLayout.createSequentialGroup()
                .addGroup(jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_CompassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_CompassLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel_CompassLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_Clino.setBackground(new java.awt.Color(0, 0, 0));
        jPanel_Clino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153), new java.awt.Color(51, 51, 51), new java.awt.Color(102, 102, 102)));
        jPanel_Clino.setForeground(new java.awt.Color(0, 51, 204));
        jPanel_Clino.setToolTipText("Vertical angle to the signal");
        jPanel_Clino.setPreferredSize(new java.awt.Dimension(80, 80));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("VRT");

        jLabel15.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("UP");
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel16.setFont(new java.awt.Font("Dialog", 2, 8)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("DOWN");

        javax.swing.GroupLayout jPanel_ClinoLayout = new javax.swing.GroupLayout(jPanel_Clino);
        jPanel_Clino.setLayout(jPanel_ClinoLayout);
        jPanel_ClinoLayout.setHorizontalGroup(
            jPanel_ClinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ClinoLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(0, 34, Short.MAX_VALUE))
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_ClinoLayout.setVerticalGroup(
            jPanel_ClinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ClinoLayout.createSequentialGroup()
                .addGroup(jPanel_ClinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabel16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_VRT, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextField_ID_RX)
                            .addComponent(jTextField_DIR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_QLY, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_FRQ)
                                .addComponent(jTextField_CS_TX, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox_EnableRDF)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_RadioFRQ, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_Compass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Clino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox_EnableRDF)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_RadioFRQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jTextField_ID_RX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_CS_TX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_DIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_FRQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_VRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_QLY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel_Clino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel_Compass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox_EnableRDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_EnableRDFActionPerformed
        radioBackend.setRDF(jCheckBox_EnableRDF.isSelected());
        updateFromState();
    }//GEN-LAST:event_jCheckBox_EnableRDFActionPerformed

    void updateFromState() {
        updateLabels();
        updateGauges();
        
        jCheckBox_EnableRDF.setSelected(radioBackend.getRDF());
    }
    
    /**
     * Update labels
     */
    public void updateLabels() {
        
        jTextField_RadioFRQ.setText(radioBackend.getFrequency());
        
        // empty fields if RDF was disabled
        if (!radioBackend.getRDF()) {
            jTextField_ID_RX.setText("");
            jTextField_CS_TX.setText("");
            jTextField_DIR.setText("");
            jTextField_VRT.setText("");
            jTextField_FRQ.setText("");
            jTextField_QLY.setText("");
        } else {
            jTextField_ID_RX.setText(String.valueOf(radioBackend.getRDF_ID_RX()));
            jTextField_CS_TX.setText(radioBackend.getRDF_CS_TX());
            jTextField_DIR.setText(String.valueOf(radioBackend.getRDF_DIR()));
            jTextField_VRT.setText(String.valueOf(radioBackend.getRDF_VRT()));
            jTextField_FRQ.setText(String.valueOf(radioBackend.getRDF_FRQ()));
            jTextField_QLY.setText(String.valueOf(radioBackend.getRDF_QLY()));
        }
    }
    
    public void updateGauges() {
        jPanel_Compass.repaint();
        jPanel_Clino.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox_EnableRDF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel_Clino;
    private javax.swing.JPanel jPanel_Compass;
    private javax.swing.JTextField jTextField_CS_TX;
    private javax.swing.JTextField jTextField_DIR;
    private javax.swing.JTextField jTextField_FRQ;
    private javax.swing.JTextField jTextField_ID_RX;
    private javax.swing.JTextField jTextField_QLY;
    private javax.swing.JTextField jTextField_RadioFRQ;
    private javax.swing.JTextField jTextField_VRT;
    // End of variables declaration//GEN-END:variables
}
